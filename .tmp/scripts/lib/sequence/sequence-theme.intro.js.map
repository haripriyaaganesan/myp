{"version":3,"sources":["lib/sequence/sequence-theme.intro.js"],"names":["sequenceElement","document","getElementById","sequenceViewCodeButtons","querySelectorAll","options","phaseThreshold","preloader","reverseWhenNavigatingBackwards","fallback","speed","mySequence","sequence","codePane","$openElement","undefined","$openButton","getTarget","e","evt","targetElement","window","event","target","srcElement","getWindowSize","$el","getComputedStyle","getPropertyValue","replace","init","viewCodeButtons","$step","$codePane","$codePaneButton","$pagination","elements","$canvas","utils","addEvent","className","parentNode","toggle","nodeName","hide","$parentLink","stepNo","indexOf","call","children","$steps","$button","isOpen","getAttribute","show","addClass","removeClass","innerHTML","setAttribute","animate","ready","animationStarted","id","$currentStep","currentStepId"],"mappings":"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","file":"sequence-theme.intro.js","sourcesContent":["/**\n * Theme Name: Intro\n * Version: 1.0.0\n * Theme URL: http://sequencejs.com/themes/intro/\n *\n * The Sequence.js introduction theme used to briefly describe how Sequence.js works\n *\n * This theme is powered by Sequence.js - The\n * responsive CSS animation framework for creating unique sliders,\n * presentations, banners, and other step-based applications.\n *\n * Author: Ian Lunn\n * Author URL: http://ianlunn.co.uk/\n *\n * Theme License: http://sequencejs.com/licenses/#free-theme\n * Sequence.js Licenses: http://sequencejs.com/licenses/\n *\n * Copyright Â© 2015 Ian Lunn Design Limited unless otherwise stated.\n */\n\n// Get the Sequence element\nvar sequenceElement = document.getElementById(\"sequence\"),\n    sequenceViewCodeButtons = document.querySelectorAll(\".seq-view-code\");\n\n// Place your Sequence options here to override defaults\n// See: http://sequencejs.com/documentation/#options\nvar options = {\n  phaseThreshold: 100,\n  preloader: true,\n  reverseWhenNavigatingBackwards: true,\n  fallback: {\n    speed: 300\n  }\n}\n\n// Launch Sequence on the element, and with the options we specified above\nvar mySequence = sequence(sequenceElement, options);\n\n\n\nvar codePane = {\n  $openElement: undefined,\n  $openButton: undefined,\n\n  getTarget: function(e) {\n    var evt,\n        targetElement;\n\n    evt = e || window.event; // get window.event if argument is falsy (in IE)\n\n    // get srcElement if target is falsy (IE)\n    targetElement = evt.target || evt.srcElement;\n\n    return targetElement;\n  },\n\n  getWindowSize: function($el) {\n\n    if (typeof getComputedStyle !== 'undefined') {\n      return window.getComputedStyle($el, ':after').getPropertyValue('content').replace(/\\\"/g, '');\n    } else {\n      return false;\n    }\n  },\n\n  init: function(viewCodeButtons) {\n\n    var $step,\n        $codePane,\n        $codePaneButton,\n        $pagination = mySequence.$pagination.elements[0],\n        $canvas = mySequence.$canvas,\n        targetElement;\n\n    // Toggle a code pane when its button is clicked\n    mySequence.utils.addEvent(sequenceElement, \"click\", function(e) {\n\n      // Don't use this functionality in large layout\n      if (codePane.getWindowSize($canvas) === \"large\") {\n        return;\n      }\n\n      targetElement = codePane.getTarget(e);\n\n      if (targetElement.className === \"seq-view-code\") {\n        /* Toggle the codepane when the view-code button is clicked */\n        $codePane = targetElement.parentNode;\n        $step = $codePane.parentNode;\n        $codePaneButton = targetElement;\n\n        codePane.toggle($step, $codePane, $codePaneButton);\n      } else if (targetElement.nodeName === \"LI\") {\n        /* Close the codepane when clicking on the step */\n        codePane.hide($step, true, codePane.$openElement);\n      }\n    });\n\n    // Close a code pane when its pagination link is clicked\n    mySequence.utils.addEvent($pagination, \"click\", function(e) {\n\n      var $parentLink,\n          stepNo,\n          $step;\n\n      targetElement = codePane.getTarget(e);\n\n      // Don't use this functionality in large layout\n      if (codePane.getWindowSize($canvas) === \"large\") {\n        return;\n      }\n\n      // Get the pagination link being clicked\n      $parentLink = (targetElement.parentNode.nodeName === \"LI\") ? targetElement.parentNode : targetElement.parentNode.parentNode;\n\n      // Get the step number of the clicked pagination link\n      stepNo = [].indexOf.call ($parentLink.parentNode.children, $parentLink);\n\n      // Get the related step\n      $step = mySequence.$steps[stepNo];\n\n      // Hide the code pane\n      codePane.hide($step, true);\n    });\n  },\n\n  // Show/hide a code pane based on current state\n  toggle: function($step, $codePane, $button) {\n\n    var isOpen = $codePane.getAttribute(\"data-is-open\");\n\n    if (isOpen !== \"true\") {\n      codePane.show($step, $codePane, $button);\n    } else {\n      codePane.hide($step, true, $codePane, $button);\n    }\n  },\n\n  // Show a code pane\n  // Use a data-attribute to save state\n  // Save the open element so it can be closed when a non-code-pane\n  // element is clicked\n  show: function($step, $codePane, $button) {\n\n    mySequence.utils.addClass($step, \"seq-code-pane-open\");\n    mySequence.utils.removeClass($step, \"seq-code-pane-snap-shut\");\n\n    $button.innerHTML = '<i class=\"fa fa-angle-double-down\"></i> Hide Code';\n\n    $codePane.setAttribute(\"data-is-open\", true);\n    codePane.$openElement = $codePane;\n    codePane.$openButton = $button;\n  },\n\n  /*\n   * Hide a code pane\n   *\n   * $step - The step element the code pane belongs to\n   * animate - Whether the code pane should be animated. No animation is used for when the code pane is automatically closed because the user navigated away without manually closing it\n   * $codePane - The code pane element\n   * $button - The button that opens/closes the code pane\n   */\n  hide: function($step, animate, $codePane, $button) {\n\n    if ($codePane === undefined) {\n      $codePane = codePane.$openElement;\n    }\n\n    // If there is no open element, don't continue\n    if (codePane.$openElement === undefined) {\n      return;\n    }\n\n    if ($button === undefined) {\n      $button = codePane.$openButton;\n    }\n\n    $step = $codePane.parentNode;\n\n    // Prevent the code pane from animating, snap shut instead\n    if (animate === false) {\n      mySequence.utils.addClass($step, \"seq-code-pane-snap-shut\");\n    }\n\n    mySequence.utils.removeClass($step, \"seq-code-pane-open\");\n\n    $button.innerHTML = '<i class=\"fa fa-angle-double-up\"></i> Show Code';\n\n    $codePane.setAttribute(\"data-is-open\", false);\n    codePane.$openElement = undefined;\n    codePane.$openButton = undefined;\n  }\n}\n\nmySequence.ready = function() {\n\n  // When Sequence.js is ready\n  codePane.init(sequenceViewCodeButtons);\n};\n\nmySequence.animationStarted = function(id, sequence) {\n\n  // When animation starts, close any open code panes\n  var $currentStep = sequence.$steps[sequence.currentStepId - 1];\n\n  codePane.hide($currentStep, false);\n}\n"]}